###########################
# --- Package Settings --- #
############################

[project]
name = "crud_pdf"
description = "My package description"
authors = [{ name = "<your name>", email = "some-email@gmail.com" }]
readme = "README.md"
requires-python = ">=3.7"
license = { text = "MIT" }
dependencies = ["boto3", "fastapi", "pydantic-settings", "python-multipart", "click", "urllib3<2.0.0"]
classifiers = ["Programming Language :: Python :: 3"]
keywords = ["one", "two"]

# version will be derived dynamically from version.txt via setuptools
dynamic = ["version"]

# docs: https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata
[tool.setuptools.dynamic]
version = { file = "version.txt" }

# optional dependencies can be installed with square brackets, e.g. `pip install my-package[test,static-code-qa]`
[project.optional-dependencies]
rag = [
    "torch>=2.0.0", 
    "transformers>=4.36.0", 
    "byaldi @ git+https://github.com/sergiopaniego/byaldi.git@colsmolvlm-support", 
    "datasets>=2.15.0",
    "Pillow>=10.0.0",
    "bitsandbytes>=0.41.0",
    "huggingface_hub[cli]"
]
api = ["uvicorn", "moto[server]"]
stubs = ["boto3-stubs[s3]"]
notebooks = ["jupyterlab", "ipykernel", "rich"]
test = ["pytest", "pytest-cov", "pytest-async", "pytest-asyncio", "moto", "openpyxl", "pytest-playwright", "playwright", "reportlab"]
release = ["build", "twine"]
static-code-qa = [
    "pre-commit",
    "pylint",
    "black",
    "isort",
    "flake8",
    "flake8-docstrings",
    "Flake8-pyproject",
    "radon",
]
# Installing dev depenendencies in your virtual env makes it so that during development VS Code can
# - surface linting errors
# - automatically apply formatting
# - show enhanced autocompletion for stubs libraries
# See .vscode/settings.json to see how VS Code is configured to use these tools
dev = ["crud_pdf[test,release,static-code-qa,stubs,notebooks,api,rag]"]

[build-system]
# Minimum requirements for the build system to execute.
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.package-data]
files_api = ["*.json"]


##############################
# --- Code Quality Tools --- #
##############################

[tool.pytest.ini_options]
markers = ["slow: marks tests as slow (deselect with '-m \"not slow\"')"]
asyncio_mode = "auto"
addopts = "-v -s"

[tool.black]
line-length = 119
exclude = '''
/(
    \.venv
  | venv
)/
'''

[tool.flake8]
docstring-convention = "all"
ignore = ["D107", "D212", "E501", "W503", "W605", "D203", "D100"]
exclude = ["venv"]
max-line-length = 119

# radon
radon-max-cc = 10

[tool.isort]
profile = "black"
multi_line_output = "VERTICAL_HANGING_INDENT"
force_grid_wrap = 2
line_length = 119

[tool.pylint."messages control"]
disable = [
    "line-too-long",
    "trailing-whitespace",
    "missing-function-docstring",
    "consider-using-f-string",
    "import-error",
    "too-few-public-methods",
    "redefined-outer-name",
]